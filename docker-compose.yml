########environment variables########
# Docker compose will automatically loads the .env file in the same directory as this file

# To stop the services:
##  docker-compose down

#####################################

services:
  MudBlazor-Frontend:
    image: ${DOCKER_REGISTRY-}dlsmandatoryproject
    build:
      context: .
      dockerfile: DLS_Mandatory_Project/DLS_Mandatory_Project/Dockerfile

  RabbitMQ:
    image: rabbitmq:3.12-management  
    
  userservice:
    container_name: userservice
    image: ${DOCKER_REGISTRY-}userservice
    build:
      context: UserService
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    depends_on:
      - postgres
    # networks:
    #   - backend

  authservice:
    container_name: authservice
    image: ${DOCKER_REGISTRY-}authservice
    build:
      context: AuthService
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DB}
    depends_on:
      - mysql
    # networks:
    #   - backend
  
  
  postgres:
    image: postgres:17.4
    container_name: postgres_user_service_container
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
    # We can use volumes to persist data in PostgreSQL, but it's not necessary for this example.
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data 


  mysql:
    image: mysql:latest
    container_name: mysql_auth_service_container
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_HOST: ${MYSQL_HOST}
    # We can use volumes to persist data in MySQL, but it's not necessary for this example.
    # volumes:


  apigateway:
    container_name: apigateway
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: ApiGateway
      dockerfile: Dockerfile
    depends_on:
      - userservice
      - authservice
