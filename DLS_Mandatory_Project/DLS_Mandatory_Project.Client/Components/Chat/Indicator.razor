@using DLS_Mandatory_Project.Client.Clients
@using Microsoft.AspNetCore.SignalR.Client
@inject IChatClient ChatClient

<div class="indicator">
    <div class="indicator-dot @indicatorDot"></div>
    <div class="indicator-text">@indicatorText</div>
</div>

<style>
    .indicator {
        display: flex;
        align-items: center;
    }
    .indicator-dot {
        width: 10px;
        height: 10px;
        border-radius: 50%;
        margin-right: 5px;
    }
    .indicator-text {
        font-size: 14px;
    }

    .indicator-dot-red {
        background-color: red;
    }

    .indicator-dot-green {
        background-color: green;
    }

    .indicator-dot-yellow {
        background-color: yellow;
    }

    .indicator-dot-blue {
        background-color: dodgerblue;
    }
</style>

@code {
    private string indicatorDot = "indicator-dot-red";
    private string indicatorText = "Disconnected";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        ChatClient.OnStateChanged += async (state) =>
        {
            switch (state)
            {
                case HubConnectionState.Connected:
                    indicatorDot = "indicator-dot-green";
                    indicatorText = "Connected";
                    break;
                case HubConnectionState.Disconnected:
                    indicatorDot = "indicator-dot-red";
                    indicatorText = "Disconnected";
                    break;
                case HubConnectionState.Reconnecting:
                    indicatorDot = "indicator-dot-yellow";
                    indicatorText = "Reconnecting";
                    break;
                default:
                    indicatorDot = "indicator-dot-blue";
                    indicatorText = "Unknown State";
                    break;
            }
            await InvokeAsync(StateHasChanged);
        };

        await InvokeAsync(StateHasChanged);
    }
}